From 1e42759141baac15a5e24cf4885f8cca3734ca7a Mon Sep 17 00:00:00 2001
From: Christof Kaufmann <christofkaufmann.dev@gmail.com>
Date: Mon, 24 Apr 2023 05:33:26 -0700
Subject: [PATCH] Skip fork start method if not available

---
 tests/vector/test_shared_memory.py | 6 ++++++
 1 file changed, 6 insertions(+)

diff --git a/tests/vector/test_shared_memory.py b/tests/vector/test_shared_memory.py
index ed5fcf60..f21b46bf 100644
--- a/tests/vector/test_shared_memory.py
+++ b/tests/vector/test_shared_memory.py
@@ -50,6 +50,9 @@ expected_types = [
     "ctx", [None, "fork", "spawn"], ids=["default", "fork", "spawn"]
 )
 def test_create_shared_memory(space, expected_type, n, ctx):
+    if ctx not in mp.get_all_start_methods():
+        pytest.skip(f'Multiprocessing start method {ctx} not available on this platform.')
+
     def assert_nested_type(lhs, rhs, n):
         assert type(lhs) == type(rhs)
         if isinstance(lhs, (list, tuple)):
@@ -81,6 +84,9 @@ def test_create_shared_memory(space, expected_type, n, ctx):
 )
 @pytest.mark.parametrize("space", custom_spaces)
 def test_create_shared_memory_custom_space(n, ctx, space):
+    if ctx not in mp.get_all_start_methods():
+        pytest.skip(f'Multiprocessing start method {ctx} not available on this platform.')
+
     ctx = mp if (ctx is None) else mp.get_context(ctx)
     with pytest.raises(CustomSpaceError):
         create_shared_memory(space, n=n, ctx=ctx)
-- 
2.40.0.windows.1

